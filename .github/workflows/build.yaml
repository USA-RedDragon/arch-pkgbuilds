name: Build packages
on:
  push:
    branches:
      - main

env:
  GPG_KEY: 7FAF4C3EA265E172DE1EA3FAD9623FAC0F0ACC21

jobs:
  
  build:
    runs-on: ubuntu-24.04
    container:
      image: ghcr.io/usa-reddragon/archlinux-pkgbuild:main@sha256:17db72ae42f7b6577f21d80285b8749a9d2003dd2fe997af60311982992f48ef 
      options: --privileged
    steps:
    - name: Delete huge unnecessary tools folder
      run: rm -rf /opt/hostedtoolcache
    - name: Update
      run: |
        sudo pacman -Syyu --noconfirm
    - name: Checkout source code
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
        path: source
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Checkout binary branch
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        path: bins
        ref: refs/heads/bins
    - name: Set up GPG
      id: import-gpg
      uses: crazy-max/ghaction-import-gpg@v6
      with:
        gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.GPG_PASS }}
        git_config_global: true
        git_user_signingkey: true
        git_commit_gpgsign: true
    - name: Set up git
      run: |
        git config --global user.name "USA-RedDragon"
        git config --global user.email "arch-pkgbuilds-keyring@mcswain.dev"
        git config --global --add safe.directory $GITHUB_WORKSPACE
    - name: Build
      shell: bash
      run: |
        gpg --recv-key 38DBBDC86092693E FC1B547C8D8172C8 # Linux-hardened
        reflector -p https --delay 0.5 --fastest 15 --sort rate --save /etc/pacman.d/mirrorlist
        cd $GITHUB_WORKSPACE/source/x86_64
        # https://github.com/orgs/community/discussions/55820#discussioncomment-5946136
        git config --global http.version HTTP/1.1
        export MAKEFLAGS="-j$(nproc)"
        last_head=$(git rev-parse HEAD^1)
        new_head=$(git rev-parse HEAD)
        for pkgbuild in $(find . -type f -name PKGBUILD); do
          pkgdir=$(dirname $pkgbuild)
          echo "Checking $pkgdir"
          if [[ "$(git diff --name-only $last_head $new_head -- $pkgdir)" ]]; then
            echo "$pkgdir has changed"
            cd $pkgdir
            # Strip the leading "./" from the path
            pkgname=${pkgdir:2}

            chown -R user:user .
            su user -c 'makepkg --verifysource'
            ret=$?
            if [ $ret -ne 0 ]; then
              echo "Failed to verify source files for ${pkgname}"
            fi
            su user -c 'makepkg --printsrcinfo > .SRCINFO'
            if [ "$(git status -s .SRCINFO)" != "" ]; then
              echo "Updating .SRCINFO for ${pkgname}"
              git add .SRCINFO
              git commit -m "Update ${pkgname} .SRCINFO"
              git pull --rebase origin main
              git push origin main
            fi
            su user -c 'makepkg -s -c -f -r --noconfirm'
            chown -R root:root .

            current=""
            if compgen -G "*.pkg.tar.zst" > /dev/null; then
              current=$(ls *.pkg.tar.zst)
            else
              echo "No package found for ${pkgname}"
              cd $GITHUB_WORKSPACE/source/x86_64
              continue
            fi
            current_version=$(echo $current | sed -E 's/.*-([0-9.]+)-([0-9]+)-.*\.pkg\.tar\.zst/\1-\2/')

            gpg --use-agent --output $current.sig --detach-sig $current

            previous=""
            if compgen -G "$GITHUB_WORKSPACE/bins/x86_64/${pkgname}*.pkg.tar.zst" > /dev/null; then
              previous=$(ls $GITHUB_WORKSPACE/bins/x86_64/${pkgname}*.pkg.tar.zst)
            fi
            previous_version=$(echo $previous | sed -E 's/.*-([0-9.]+)-([0-9]+)-.*\.pkg\.tar\.zst/\1-\2/')
            echo "Previous version: ${previous_version}"
            echo "Current version: ${current_version}"

            if [[ "$previous_version" == "$current_version" ]]; then
              echo "Package ${pkgname} is already up to date"
              cd $GITHUB_WORKSPACE/source/x86_64
              continue
            fi

            mv *.pkg.tar.zst $GITHUB_WORKSPACE/bins/x86_64
            mv *.pkg.tar.zst.sig $GITHUB_WORKSPACE/bins/x86_64

            cd $GITHUB_WORKSPACE/bins
            if [[ -f "$previous" ]]; then
              git rm -f "x86_64/${pkgname}-$previous_version*.pkg.tar.zst"
              rm -f "$previous"
            fi
            if [[ -f "$previous.sig" ]]; then
              git rm -f "x86_64/${pkgname}-$previous_version*.pkg.tar.zst.sig"
              rm -f "$previous.sig"
            fi
            git add "x86_64/$current"
            git add "x86_64/$current.sig"

            repo-add -R -s -k $GPG_KEY x86_64/usa-reddragon.db.tar.zst "x86_64/$current"
            rm -f x86_64/usa-reddragon.db x86_64/usa-reddragon.files x86_64/usa-reddragon.db.sig x86_64/usa-reddragon.files.sig
            cp x86_64/usa-reddragon.db.tar.zst x86_64/usa-reddragon.db
            cp x86_64/usa-reddragon.db.tar.zst.sig x86_64/usa-reddragon.db.sig
            cp x86_64/usa-reddragon.files.tar.zst x86_64/usa-reddragon.files
            cp x86_64/usa-reddragon.files.tar.zst.sig x86_64/usa-reddragon.files.sig

            git add x86_64/usa-reddragon.db*
            git add x86_64/usa-reddragon.files*

            git commit -m "Update ${pkgname} from ${previous_version} to ${current_version}"
            git push origin bins

            cd $GITHUB_WORKSPACE/source/x86_64
          fi
        done
